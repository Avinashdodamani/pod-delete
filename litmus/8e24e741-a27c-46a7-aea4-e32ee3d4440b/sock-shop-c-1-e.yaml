apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  creationTimestamp: null
  labels:
    infra_id: 2727871f-a18a-4b69-b5fe-f82ac57cdd1a
    revision_id: 32cd4812-e80e-48c2-9cb2-fce2d276e19b
    workflow_id: ad2e053e-c04b-4847-8027-efd542e37ed0
    workflows.argoproj.io/controller-instanceid: 2727871f-a18a-4b69-b5fe-f82ac57cdd1a
  name: sock-shop-c-1-e
  namespace: litmus
spec:
  arguments:
    parameters:
    - name: adminModeNamespace
      value: litmus
  entrypoint: sock-shop-c-1-e
  podGC:
    strategy: OnWorkflowCompletion
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
  serviceAccountName: argo-chaos
  templates:
  - inputs: {}
    metadata: {}
    name: sock-shop-c-1-e
    outputs: {}
    steps:
    - - arguments: {}
        name: install-chaos-faults
        template: install-chaos-faults
    - - arguments: {}
        name: pod-cpu-hog-s2q
        template: pod-cpu-hog-s2q
    - - arguments: {}
        name: cleanup-chaos-resources
        template: cleanup-chaos-resources
  - container:
      args:
      - kubectl apply -f /tmp/ -n {{workflow.parameters.adminModeNamespace}} && sleep
        30
      command:
      - sh
      - -c
      image: litmuschaos/k8s:2.11.0
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: pod-cpu-hog-s2q
        path: /tmp/pod-cpu-hog-s2q.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            description:
              message: |
                Injects CPU consumption on pods belonging to an app deployment
            kind: ChaosExperiment
            metadata:
              name: pod-cpu-hog
              labels:
                name: pod-cpu-hog
                app.kubernetes.io/part-of: litmus
                app.kubernetes.io/component: chaosexperiment
                app.kubernetes.io/version: 3.10.0
            spec:
              definition:
                scope: Namespaced
                permissions:
                  - apiGroups:
                      - ""
                    resources:
                      - pods
                    verbs:
                      - create
                      - delete
                      - get
                      - list
                      - patch
                      - update
                      - deletecollection
                  - apiGroups:
                      - ""
                    resources:
                      - events
                    verbs:
                      - create
                      - get
                      - list
                      - patch
                      - update
                  - apiGroups:
                      - ""
                    resources:
                      - configmaps
                    verbs:
                      - get
                      - list
                  - apiGroups:
                      - ""
                    resources:
                      - pods/log
                    verbs:
                      - get
                      - list
                      - watch
                  - apiGroups:
                      - ""
                    resources:
                      - pods/exec
                    verbs:
                      - get
                      - list
                      - create
                  - apiGroups:
                      - apps
                    resources:
                      - deployments
                      - statefulsets
                      - replicasets
                      - daemonsets
                    verbs:
                      - list
                      - get
                  - apiGroups:
                      - apps.openshift.io
                    resources:
                      - deploymentconfigs
                    verbs:
                      - list
                      - get
                  - apiGroups:
                      - ""
                    resources:
                      - replicationcontrollers
                    verbs:
                      - get
                      - list
                  - apiGroups:
                      - argoproj.io
                    resources:
                      - rollouts
                    verbs:
                      - list
                      - get
                  - apiGroups:
                      - batch
                    resources:
                      - jobs
                    verbs:
                      - create
                      - list
                      - get
                      - delete
                      - deletecollection
                  - apiGroups:
                      - litmuschaos.io
                    resources:
                      - chaosengines
                      - chaosexperiments
                      - chaosresults
                    verbs:
                      - create
                      - list
                      - get
                      - patch
                      - update
                      - delete
                image: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.10.0
                imagePullPolicy: Always
                args:
                  - -c
                  - ./experiments -name pod-cpu-hog
                command:
                  - /bin/bash
                env:
                  - name: TOTAL_CHAOS_DURATION
                    value: "60"
                  - name: CPU_CORES
                    value: "1"
                  - name: CPU_LOAD
                    value: "100"
                  - name: PODS_AFFECTED_PERC
                    value: ""
                  - name: RAMP_TIME
                    value: ""
                  - name: LIB_IMAGE
                    value: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.10.0
                  - name: STRESS_IMAGE
                    value: alexeiled/stress-ng:latest-ubuntu
                  - name: CONTAINER_RUNTIME
                    value: containerd
                  - name: SOCKET_PATH
                    value: /run/containerd/containerd.sock
                  - name: TARGET_CONTAINER
                    value: ""
                  - name: TARGET_PODS
                    value: ""
                  - name: DEFAULT_HEALTH_CHECK
                    value: "false"
                  - name: NODE_LABEL
                    value: ""
                  - name: SEQUENCE
                    value: parallel
                labels:
                  name: pod-cpu-hog
                  app.kubernetes.io/part-of: litmus
                  app.kubernetes.io/component: experiment-job
                  app.kubernetes.io/runtime-api-usage: "true"
                  app.kubernetes.io/version: 3.10.0
    metadata: {}
    name: install-chaos-faults
    outputs: {}
  - container:
      args:
      - kubectl delete chaosengine -l workflow_run_id={{workflow.uid}} -n {{workflow.parameters.adminModeNamespace}}
      command:
      - sh
      - -c
      image: litmuschaos/k8s:2.11.0
      name: ""
      resources: {}
    inputs: {}
    metadata: {}
    name: cleanup-chaos-resources
    outputs: {}
  - container:
      args:
      - -file=/tmp/chaosengine-pod-cpu-hog-s2q.yaml
      - -saveName=/tmp/engine-name
      image: docker.io/litmuschaos/litmus-checker:2.11.0
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: pod-cpu-hog-s2q
        path: /tmp/chaosengine-pod-cpu-hog-s2q.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            kind: ChaosEngine
            metadata:
              namespace: "{{workflow.parameters.adminModeNamespace}}"
              labels:
                workflow_run_id: "{{ workflow.uid }}"
                workflow_name: sock-shop-c-1-e
              annotations:
                probeRef: '[{"name":"s-1","mode":"Continuous"}]'
              generateName: pod-cpu-hog-s2q
            spec:
              engineState: active
              appinfo:
                appns: sock-shop
                applabel: name=carts
                appkind: deployment
              chaosServiceAccount: litmus-admin
              experiments:
                - name: pod-cpu-hog
                  spec:
                    components:
                      env:
                        - name: TOTAL_CHAOS_DURATION
                          value: "60"
                        - name: CPU_CORES
                          value: "1"
                        - name: CPU_LOAD
                          value: "100"
                        - name: PODS_AFFECTED_PERC
                          value: "100"
                        - name: RAMP_TIME
                          value: ""
                        - name: LIB_IMAGE
                          value: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.10.0
                        - name: STRESS_IMAGE
                          value: alexeiled/stress-ng:latest-ubuntu
                        - name: CONTAINER_RUNTIME
                          value: containerd
                        - name: SOCKET_PATH
                          value: /run/containerd/containerd.sock
                        - name: TARGET_CONTAINER
                          value: ""
                        - name: TARGET_PODS
                          value: ""
                        - name: DEFAULT_HEALTH_CHECK
                          value: "false"
                        - name: NODE_LABEL
                          value: ""
                        - name: SEQUENCE
                          value: parallel
    metadata:
      labels:
        weight: "10"
    name: pod-cpu-hog-s2q
    outputs: {}
status:
  finishedAt: null
  startedAt: null
